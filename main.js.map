{"version":3,"sources":["./src/app/pad/pad.component.ts","./src/app/pad/pad.component.html","./src/environments/environment.ts","./src/app/app.module.ts","./src/app/file/file.component.ts","./src/app/file/file.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAqE;;AAQ9D,MAAM,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCRzB,oEAAG;QAAA,qEAAU;QAAA,4DAAI;;6FDQJ,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;gBAClC,aAAa,EAAE,+DAAiB,CAAC,SAAS;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACP;AACK;AAEL;AACG;;AAe/C,MAAM,SAAS;IAElB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,aAAa;QACT,MAAM,QAAQ,GAAU;YACpB,CAAC,+DAAY,EAAC,cAAc,CAAC;YAC7B,CAAC,kEAAa,EAAC,eAAe,CAAC;SAClC,CAAC;QACF,KAAK,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,QAAQ,EAAE;YACtC,MAAM,EAAE,GAAG,6EAAmB,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvE,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACnC;IACL,CAAC;;wFAbQ,SAAS;4IAAT,SAAS,iIALP,EAAE,YAHJ;YACL,uEAAa;SAChB;mIAMQ,SAAS,mBAXd,+DAAY;QACZ,kEAAa,aAGb,uEAAa;6FAOR,SAAS;cAbrB,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,+DAAY;oBACZ,kEAAa;iBAChB;gBACD,OAAO,EAAE;oBACL,uEAAa;iBAChB;gBACD,SAAS,EAAE,EAAE;gBACb,eAAe,EAAE;oBACb,+DAAY;iBACf;aACJ;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;6FDOL,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'chaospad-pad',\n  templateUrl: './pad.component.html',\n  styleUrls: ['./pad.component.css'],\n  encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class PadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pad works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { BrowserModule } from '@angular/platform-browser';\nimport { Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\n\nimport { PadComponent } from './pad/pad.component';\nimport { FileComponent } from './file/file.component';\n\n@NgModule({\n    declarations: [\n        PadComponent,\n        FileComponent\n    ],\n    imports: [\n        BrowserModule\n    ],\n    providers: [],\n    entryComponents: [\n        PadComponent\n    ]\n})\nexport class AppModule {\n\n    constructor(private injector: Injector) {}\n    \n    ngDoBootstrap() {\n        const elements: any[] = [\n            [PadComponent,\"chaospad-pad\"],\n            [FileComponent,\"chaospad-file\"]\n        ]; \n        for (const [component ,name] of elements) {\n            const el = createCustomElement(component, { injector: this.injector });\n            customElements.define(name, el);\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'chaospad-file',\n  templateUrl: './file.component.html',\n  styleUrls: ['./file.component.css']\n})\nexport class FileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>file works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}